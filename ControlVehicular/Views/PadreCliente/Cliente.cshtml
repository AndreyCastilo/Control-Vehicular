@model ControlVehicular.Models.PadreClienteModelo
@using Modelo.Database

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/Cliente/PadreClienteScript.js")"></script>
}
</br>
<h2>Cliente</h2>

<p>
    <button type="button" class="btn btn-default" onclick="AbrirModalAgregarCliente();">Agregar Cliente</button>
</p>
<table id="tablaPadreCliente"
       class="sortable table-bordered"
       data-toolbar="#toolbar"
       data-search="true"
       data-pagination="true"
       data-minimum-count-columns="2"
       data-id-field="Codigo"
       data-unique-id="Codigo"
       data-page-size="8"
       data-show-footer="false">
    <thead>
        <tr>
            <th data-field="Empresa" data-sortable="true">
                @Html.DisplayNameFor(model => model.Empresa)
            </th>
            <th data-field="Nombre" data-sortable="true">
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th data-field="MostrarComo" data-sortable="true">
                @Html.DisplayNameFor(model => model.MostrarComo)
            </th>
            <th data-field="Direccion" data-sortable="true">
                @Html.DisplayNameFor(model => model.Direccion)
            </th>

        </tr>
    </thead>
    <tbody></tbody>
</table>

<!-- Modal -->
<div id="modalAgregarCliente" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "formAgregarCliente" }))
            {

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Agregar Cliente</h4>
                </div>
                <div class="modal-body">
                    <p>Digite la información del cliente que desea agregar.</p>
                    <div class="row">
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.MostrarComo)
                            @Html.EditorFor(model => model.MostrarComo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MostrarComo, "", new { @class = "text-danger" })
                        </div>
                    </div>        
                    <div class="row">
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.Direccion)
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>
                    </div>            
                    <div class="row">
                        <div class="form-group col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Empresa)
                                @Html.DropDownListFor(m => m.Empresa, // 1. Store selected value in Model.State;
                                                                      // when page is rendered after postback,
                                                                      // take selected value from Model.State.

                                              // 2. Take list of values from Model.States
                                              Model.Empresas,

                                              // 3. Text for the first 'default' option
                                              "- Escoja una Empresa -",

                                              //4. A class name to assign to <select> tag
                                              new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Empresa, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="agregarCliente()" class="btn btn-info"><i class="fa fa-plus"></i> Agregar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal -->
<div id="modalEditarCliente" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "formEditarCliente" }))
            {
            @Html.Hidden("Codigo") // Para el codigo del Padre cliente
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Editar Cliente</h4>
                </div>
                <div class="modal-body">
                    <p>Digite la información del cliente que desea editar.</p>
                    <div class="row">
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.MostrarComo)
                            @Html.EditorFor(model => model.MostrarComo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MostrarComo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.Direccion)
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Empresa)
                                @Html.DropDownListFor(m => m.Empresa, // 1. Store selected value in Model.State;
                                                                      // when page is rendered after postback,
                                                                      // take selected value from Model.State.

                                              // 2. Take list of values from Model.States
                                              Model.Empresas,

                                              // 3. Text for the first 'default' option
                                              "- Escoja una Empresa -",

                                              //4. A class name to assign to <select> tag
                                              new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Empresa, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="guardarEditarCliente()" class="btn btn-info"><i class="fa fa-plus"></i> Editar</button>
                    <button type="button" onclick="borrarCliente()" class="btn-danger"><i class="fa fa-trash"></i> Eliminar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        }
    </div>
</div>
