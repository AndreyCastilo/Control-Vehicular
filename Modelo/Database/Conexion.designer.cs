#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modelo.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ControlVehicular")]
	public partial class ConexionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClienteHijo(ClienteHijo instance);
    partial void UpdateClienteHijo(ClienteHijo instance);
    partial void DeleteClienteHijo(ClienteHijo instance);
    partial void InsertClienteRuta(ClienteRuta instance);
    partial void UpdateClienteRuta(ClienteRuta instance);
    partial void DeleteClienteRuta(ClienteRuta instance);
    partial void InsertEmpresa(Empresa instance);
    partial void UpdateEmpresa(Empresa instance);
    partial void DeleteEmpresa(Empresa instance);
    partial void InsertConductor(Conductor instance);
    partial void UpdateConductor(Conductor instance);
    partial void DeleteConductor(Conductor instance);
    partial void InsertPadreCliente(PadreCliente instance);
    partial void UpdatePadreCliente(PadreCliente instance);
    partial void DeletePadreCliente(PadreCliente instance);
    partial void InsertRuta(Ruta instance);
    partial void UpdateRuta(Ruta instance);
    partial void DeleteRuta(Ruta instance);
    partial void InsertSeguro(Seguro instance);
    partial void UpdateSeguro(Seguro instance);
    partial void DeleteSeguro(Seguro instance);
    partial void InsertUnidad(Unidad instance);
    partial void UpdateUnidad(Unidad instance);
    partial void DeleteUnidad(Unidad instance);
    #endregion
		
		public ConexionDataContext() : 
				base(global::Modelo.Properties.Settings.Default.ControlVehicularConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ClienteHijo> ClienteHijo
		{
			get
			{
				return this.GetTable<ClienteHijo>();
			}
		}
		
		public System.Data.Linq.Table<ClienteRuta> ClienteRuta
		{
			get
			{
				return this.GetTable<ClienteRuta>();
			}
		}
		
		public System.Data.Linq.Table<Empresa> Empresa
		{
			get
			{
				return this.GetTable<Empresa>();
			}
		}
		
		public System.Data.Linq.Table<Conductor> Conductor
		{
			get
			{
				return this.GetTable<Conductor>();
			}
		}
		
		public System.Data.Linq.Table<PadreCliente> PadreCliente
		{
			get
			{
				return this.GetTable<PadreCliente>();
			}
		}
		
		public System.Data.Linq.Table<Ruta> Ruta
		{
			get
			{
				return this.GetTable<Ruta>();
			}
		}
		
		public System.Data.Linq.Table<Seguro> Seguro
		{
			get
			{
				return this.GetTable<Seguro>();
			}
		}
		
		public System.Data.Linq.Table<Unidad> Unidad
		{
			get
			{
				return this.GetTable<Unidad>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClienteHijo")]
	public partial class ClienteHijo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private System.Nullable<int> _PadreCliente;
		
		private string _Nombre;
		
		private string _MostrarComo;
		
		private EntitySet<ClienteRuta> _ClienteRuta;
		
		private EntityRef<PadreCliente> _PadreCliente1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnPadreClienteChanging(System.Nullable<int> value);
    partial void OnPadreClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnMostrarComoChanging(string value);
    partial void OnMostrarComoChanged();
    #endregion
		
		public ClienteHijo()
		{
			this._ClienteRuta = new EntitySet<ClienteRuta>(new Action<ClienteRuta>(this.attach_ClienteRuta), new Action<ClienteRuta>(this.detach_ClienteRuta));
			this._PadreCliente1 = default(EntityRef<PadreCliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PadreCliente", DbType="Int")]
		public System.Nullable<int> PadreCliente
		{
			get
			{
				return this._PadreCliente;
			}
			set
			{
				if ((this._PadreCliente != value))
				{
					if (this._PadreCliente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPadreClienteChanging(value);
					this.SendPropertyChanging();
					this._PadreCliente = value;
					this.SendPropertyChanged("PadreCliente");
					this.OnPadreClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MostrarComo", DbType="NVarChar(100)")]
		public string MostrarComo
		{
			get
			{
				return this._MostrarComo;
			}
			set
			{
				if ((this._MostrarComo != value))
				{
					this.OnMostrarComoChanging(value);
					this.SendPropertyChanging();
					this._MostrarComo = value;
					this.SendPropertyChanged("MostrarComo");
					this.OnMostrarComoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteHijo_ClienteRuta", Storage="_ClienteRuta", ThisKey="Codigo", OtherKey="ClienteHijo")]
		public EntitySet<ClienteRuta> ClienteRuta
		{
			get
			{
				return this._ClienteRuta;
			}
			set
			{
				this._ClienteRuta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PadreCliente_ClienteHijo", Storage="_PadreCliente1", ThisKey="PadreCliente", OtherKey="Codigo", IsForeignKey=true)]
		public PadreCliente PadreCliente1
		{
			get
			{
				return this._PadreCliente1.Entity;
			}
			set
			{
				PadreCliente previousValue = this._PadreCliente1.Entity;
				if (((previousValue != value) 
							|| (this._PadreCliente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PadreCliente1.Entity = null;
						previousValue.ClienteHijo.Remove(this);
					}
					this._PadreCliente1.Entity = value;
					if ((value != null))
					{
						value.ClienteHijo.Add(this);
						this._PadreCliente = value.Codigo;
					}
					else
					{
						this._PadreCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("PadreCliente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClienteRuta(ClienteRuta entity)
		{
			this.SendPropertyChanging();
			entity.ClienteHijo1 = this;
		}
		
		private void detach_ClienteRuta(ClienteRuta entity)
		{
			this.SendPropertyChanging();
			entity.ClienteHijo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClienteRuta")]
	public partial class ClienteRuta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ruta;
		
		private int _ClienteHijo;
		
		private EntityRef<ClienteHijo> _ClienteHijo1;
		
		private EntityRef<Ruta> _Ruta1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRutaChanging(int value);
    partial void OnRutaChanged();
    partial void OnClienteHijoChanging(int value);
    partial void OnClienteHijoChanged();
    #endregion
		
		public ClienteRuta()
		{
			this._ClienteHijo1 = default(EntityRef<ClienteHijo>);
			this._Ruta1 = default(EntityRef<Ruta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ruta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ruta
		{
			get
			{
				return this._Ruta;
			}
			set
			{
				if ((this._Ruta != value))
				{
					if (this._Ruta1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRutaChanging(value);
					this.SendPropertyChanging();
					this._Ruta = value;
					this.SendPropertyChanged("Ruta");
					this.OnRutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteHijo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClienteHijo
		{
			get
			{
				return this._ClienteHijo;
			}
			set
			{
				if ((this._ClienteHijo != value))
				{
					if (this._ClienteHijo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteHijoChanging(value);
					this.SendPropertyChanging();
					this._ClienteHijo = value;
					this.SendPropertyChanged("ClienteHijo");
					this.OnClienteHijoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClienteHijo_ClienteRuta", Storage="_ClienteHijo1", ThisKey="ClienteHijo", OtherKey="Codigo", IsForeignKey=true)]
		public ClienteHijo ClienteHijo1
		{
			get
			{
				return this._ClienteHijo1.Entity;
			}
			set
			{
				ClienteHijo previousValue = this._ClienteHijo1.Entity;
				if (((previousValue != value) 
							|| (this._ClienteHijo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClienteHijo1.Entity = null;
						previousValue.ClienteRuta.Remove(this);
					}
					this._ClienteHijo1.Entity = value;
					if ((value != null))
					{
						value.ClienteRuta.Add(this);
						this._ClienteHijo = value.Codigo;
					}
					else
					{
						this._ClienteHijo = default(int);
					}
					this.SendPropertyChanged("ClienteHijo1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_ClienteRuta", Storage="_Ruta1", ThisKey="Ruta", OtherKey="Codigo", IsForeignKey=true)]
		public Ruta Ruta1
		{
			get
			{
				return this._Ruta1.Entity;
			}
			set
			{
				Ruta previousValue = this._Ruta1.Entity;
				if (((previousValue != value) 
							|| (this._Ruta1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ruta1.Entity = null;
						previousValue.ClienteRuta.Remove(this);
					}
					this._Ruta1.Entity = value;
					if ((value != null))
					{
						value.ClienteRuta.Add(this);
						this._Ruta = value.Codigo;
					}
					else
					{
						this._Ruta = default(int);
					}
					this.SendPropertyChanged("Ruta1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresa")]
	public partial class Empresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private string _Nombre;
		
		private bool _Fisica;
		
		private string _Cedula;
		
		private string _Telefono;
		
		private EntitySet<Conductor> _Conductor;
		
		private EntitySet<PadreCliente> _PadreCliente;
		
		private EntitySet<Ruta> _Ruta;
		
		private EntitySet<Seguro> _Seguro;
		
		private EntitySet<Unidad> _Unidad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFisicaChanging(bool value);
    partial void OnFisicaChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Empresa()
		{
			this._Conductor = new EntitySet<Conductor>(new Action<Conductor>(this.attach_Conductor), new Action<Conductor>(this.detach_Conductor));
			this._PadreCliente = new EntitySet<PadreCliente>(new Action<PadreCliente>(this.attach_PadreCliente), new Action<PadreCliente>(this.detach_PadreCliente));
			this._Ruta = new EntitySet<Ruta>(new Action<Ruta>(this.attach_Ruta), new Action<Ruta>(this.detach_Ruta));
			this._Seguro = new EntitySet<Seguro>(new Action<Seguro>(this.attach_Seguro), new Action<Seguro>(this.detach_Seguro));
			this._Unidad = new EntitySet<Unidad>(new Action<Unidad>(this.attach_Unidad), new Action<Unidad>(this.detach_Unidad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fisica", DbType="Bit NOT NULL")]
		public bool Fisica
		{
			get
			{
				return this._Fisica;
			}
			set
			{
				if ((this._Fisica != value))
				{
					this.OnFisicaChanging(value);
					this.SendPropertyChanging();
					this._Fisica = value;
					this.SendPropertyChanged("Fisica");
					this.OnFisicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="NVarChar(10)")]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(10)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Conductor", Storage="_Conductor", ThisKey="Codigo", OtherKey="Empresa")]
		public EntitySet<Conductor> Conductor
		{
			get
			{
				return this._Conductor;
			}
			set
			{
				this._Conductor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_PadreCliente", Storage="_PadreCliente", ThisKey="Codigo", OtherKey="Empresa")]
		public EntitySet<PadreCliente> PadreCliente
		{
			get
			{
				return this._PadreCliente;
			}
			set
			{
				this._PadreCliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Ruta", Storage="_Ruta", ThisKey="Codigo", OtherKey="Empresa")]
		public EntitySet<Ruta> Ruta
		{
			get
			{
				return this._Ruta;
			}
			set
			{
				this._Ruta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Seguro", Storage="_Seguro", ThisKey="Codigo", OtherKey="Empresa")]
		public EntitySet<Seguro> Seguro
		{
			get
			{
				return this._Seguro;
			}
			set
			{
				this._Seguro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Unidad", Storage="_Unidad", ThisKey="Codigo", OtherKey="Empresa")]
		public EntitySet<Unidad> Unidad
		{
			get
			{
				return this._Unidad;
			}
			set
			{
				this._Unidad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Conductor(Conductor entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = this;
		}
		
		private void detach_Conductor(Conductor entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = null;
		}
		
		private void attach_PadreCliente(PadreCliente entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = this;
		}
		
		private void detach_PadreCliente(PadreCliente entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = null;
		}
		
		private void attach_Ruta(Ruta entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = this;
		}
		
		private void detach_Ruta(Ruta entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = null;
		}
		
		private void attach_Seguro(Seguro entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = this;
		}
		
		private void detach_Seguro(Seguro entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = null;
		}
		
		private void attach_Unidad(Unidad entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = this;
		}
		
		private void detach_Unidad(Unidad entity)
		{
			this.SendPropertyChanging();
			entity.Empresa1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conductor")]
	public partial class Conductor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private System.Nullable<int> _Empresa;
		
		private string _Nombre;
		
		private string _URLFotografiaCedula;
		
		private string _URLFotografiaLicencia;
		
		private string _TipoLicencia;
		
		private System.Nullable<System.DateTime> _FechaVencimiento;
		
		private EntitySet<Ruta> _Ruta;
		
		private EntityRef<Empresa> _Empresa1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnEmpresaChanging(System.Nullable<int> value);
    partial void OnEmpresaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnURLFotografiaCedulaChanging(string value);
    partial void OnURLFotografiaCedulaChanged();
    partial void OnURLFotografiaLicenciaChanging(string value);
    partial void OnURLFotografiaLicenciaChanged();
    partial void OnTipoLicenciaChanging(string value);
    partial void OnTipoLicenciaChanged();
    partial void OnFechaVencimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaVencimientoChanged();
    #endregion
		
		public Conductor()
		{
			this._Ruta = new EntitySet<Ruta>(new Action<Ruta>(this.attach_Ruta), new Action<Ruta>(this.detach_Ruta));
			this._Empresa1 = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresa", DbType="Int")]
		public System.Nullable<int> Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				if ((this._Empresa != value))
				{
					if (this._Empresa1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpresaChanging(value);
					this.SendPropertyChanging();
					this._Empresa = value;
					this.SendPropertyChanged("Empresa");
					this.OnEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLFotografiaCedula", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URLFotografiaCedula
		{
			get
			{
				return this._URLFotografiaCedula;
			}
			set
			{
				if ((this._URLFotografiaCedula != value))
				{
					this.OnURLFotografiaCedulaChanging(value);
					this.SendPropertyChanging();
					this._URLFotografiaCedula = value;
					this.SendPropertyChanged("URLFotografiaCedula");
					this.OnURLFotografiaCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLFotografiaLicencia", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URLFotografiaLicencia
		{
			get
			{
				return this._URLFotografiaLicencia;
			}
			set
			{
				if ((this._URLFotografiaLicencia != value))
				{
					this.OnURLFotografiaLicenciaChanging(value);
					this.SendPropertyChanging();
					this._URLFotografiaLicencia = value;
					this.SendPropertyChanged("URLFotografiaLicencia");
					this.OnURLFotografiaLicenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoLicencia", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TipoLicencia
		{
			get
			{
				return this._TipoLicencia;
			}
			set
			{
				if ((this._TipoLicencia != value))
				{
					this.OnTipoLicenciaChanging(value);
					this.SendPropertyChanging();
					this._TipoLicencia = value;
					this.SendPropertyChanged("TipoLicencia");
					this.OnTipoLicenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaVencimiento", DbType="Date")]
		public System.Nullable<System.DateTime> FechaVencimiento
		{
			get
			{
				return this._FechaVencimiento;
			}
			set
			{
				if ((this._FechaVencimiento != value))
				{
					this.OnFechaVencimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaVencimiento = value;
					this.SendPropertyChanged("FechaVencimiento");
					this.OnFechaVencimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conductor_Ruta", Storage="_Ruta", ThisKey="Codigo", OtherKey="Conductor")]
		public EntitySet<Ruta> Ruta
		{
			get
			{
				return this._Ruta;
			}
			set
			{
				this._Ruta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Conductor", Storage="_Empresa1", ThisKey="Empresa", OtherKey="Codigo", IsForeignKey=true)]
		public Empresa Empresa1
		{
			get
			{
				return this._Empresa1.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa1.Entity;
				if (((previousValue != value) 
							|| (this._Empresa1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa1.Entity = null;
						previousValue.Conductor.Remove(this);
					}
					this._Empresa1.Entity = value;
					if ((value != null))
					{
						value.Conductor.Add(this);
						this._Empresa = value.Codigo;
					}
					else
					{
						this._Empresa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresa1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ruta(Ruta entity)
		{
			this.SendPropertyChanging();
			entity.Conductor1 = this;
		}
		
		private void detach_Ruta(Ruta entity)
		{
			this.SendPropertyChanging();
			entity.Conductor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PadreCliente")]
	public partial class PadreCliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private System.Nullable<int> _Empresa;
		
		private string _Nombre;
		
		private string _MostrarComo;
		
		private string _Direccion;
		
		private EntitySet<ClienteHijo> _ClienteHijo;
		
		private EntityRef<Empresa> _Empresa1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnEmpresaChanging(System.Nullable<int> value);
    partial void OnEmpresaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnMostrarComoChanging(string value);
    partial void OnMostrarComoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    #endregion
		
		public PadreCliente()
		{
			this._ClienteHijo = new EntitySet<ClienteHijo>(new Action<ClienteHijo>(this.attach_ClienteHijo), new Action<ClienteHijo>(this.detach_ClienteHijo));
			this._Empresa1 = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresa", DbType="Int")]
		public System.Nullable<int> Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				if ((this._Empresa != value))
				{
					if (this._Empresa1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpresaChanging(value);
					this.SendPropertyChanging();
					this._Empresa = value;
					this.SendPropertyChanged("Empresa");
					this.OnEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MostrarComo", DbType="NVarChar(100)")]
		public string MostrarComo
		{
			get
			{
				return this._MostrarComo;
			}
			set
			{
				if ((this._MostrarComo != value))
				{
					this.OnMostrarComoChanging(value);
					this.SendPropertyChanging();
					this._MostrarComo = value;
					this.SendPropertyChanged("MostrarComo");
					this.OnMostrarComoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PadreCliente_ClienteHijo", Storage="_ClienteHijo", ThisKey="Codigo", OtherKey="PadreCliente")]
		public EntitySet<ClienteHijo> ClienteHijo
		{
			get
			{
				return this._ClienteHijo;
			}
			set
			{
				this._ClienteHijo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_PadreCliente", Storage="_Empresa1", ThisKey="Empresa", OtherKey="Codigo", IsForeignKey=true)]
		public Empresa Empresa1
		{
			get
			{
				return this._Empresa1.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa1.Entity;
				if (((previousValue != value) 
							|| (this._Empresa1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa1.Entity = null;
						previousValue.PadreCliente.Remove(this);
					}
					this._Empresa1.Entity = value;
					if ((value != null))
					{
						value.PadreCliente.Add(this);
						this._Empresa = value.Codigo;
					}
					else
					{
						this._Empresa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresa1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClienteHijo(ClienteHijo entity)
		{
			this.SendPropertyChanging();
			entity.PadreCliente1 = this;
		}
		
		private void detach_ClienteHijo(ClienteHijo entity)
		{
			this.SendPropertyChanging();
			entity.PadreCliente1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ruta")]
	public partial class Ruta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private System.Nullable<int> _Empresa;
		
		private System.Nullable<int> _Conductor;
		
		private System.Nullable<int> _Vehiculo;
		
		private string _Nombre;
		
		private EntitySet<ClienteRuta> _ClienteRuta;
		
		private EntityRef<Conductor> _Conductor1;
		
		private EntityRef<Empresa> _Empresa1;
		
		private EntityRef<Unidad> _Unidad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnEmpresaChanging(System.Nullable<int> value);
    partial void OnEmpresaChanged();
    partial void OnConductorChanging(System.Nullable<int> value);
    partial void OnConductorChanged();
    partial void OnVehiculoChanging(System.Nullable<int> value);
    partial void OnVehiculoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Ruta()
		{
			this._ClienteRuta = new EntitySet<ClienteRuta>(new Action<ClienteRuta>(this.attach_ClienteRuta), new Action<ClienteRuta>(this.detach_ClienteRuta));
			this._Conductor1 = default(EntityRef<Conductor>);
			this._Empresa1 = default(EntityRef<Empresa>);
			this._Unidad = default(EntityRef<Unidad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresa", DbType="Int")]
		public System.Nullable<int> Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				if ((this._Empresa != value))
				{
					if (this._Empresa1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpresaChanging(value);
					this.SendPropertyChanging();
					this._Empresa = value;
					this.SendPropertyChanged("Empresa");
					this.OnEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conductor", DbType="Int")]
		public System.Nullable<int> Conductor
		{
			get
			{
				return this._Conductor;
			}
			set
			{
				if ((this._Conductor != value))
				{
					if (this._Conductor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConductorChanging(value);
					this.SendPropertyChanging();
					this._Conductor = value;
					this.SendPropertyChanged("Conductor");
					this.OnConductorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehiculo", DbType="Int")]
		public System.Nullable<int> Vehiculo
		{
			get
			{
				return this._Vehiculo;
			}
			set
			{
				if ((this._Vehiculo != value))
				{
					if (this._Unidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehiculoChanging(value);
					this.SendPropertyChanging();
					this._Vehiculo = value;
					this.SendPropertyChanged("Vehiculo");
					this.OnVehiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ruta_ClienteRuta", Storage="_ClienteRuta", ThisKey="Codigo", OtherKey="Ruta")]
		public EntitySet<ClienteRuta> ClienteRuta
		{
			get
			{
				return this._ClienteRuta;
			}
			set
			{
				this._ClienteRuta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conductor_Ruta", Storage="_Conductor1", ThisKey="Conductor", OtherKey="Codigo", IsForeignKey=true)]
		public Conductor Conductor1
		{
			get
			{
				return this._Conductor1.Entity;
			}
			set
			{
				Conductor previousValue = this._Conductor1.Entity;
				if (((previousValue != value) 
							|| (this._Conductor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conductor1.Entity = null;
						previousValue.Ruta.Remove(this);
					}
					this._Conductor1.Entity = value;
					if ((value != null))
					{
						value.Ruta.Add(this);
						this._Conductor = value.Codigo;
					}
					else
					{
						this._Conductor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Conductor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Ruta", Storage="_Empresa1", ThisKey="Empresa", OtherKey="Codigo", IsForeignKey=true)]
		public Empresa Empresa1
		{
			get
			{
				return this._Empresa1.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa1.Entity;
				if (((previousValue != value) 
							|| (this._Empresa1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa1.Entity = null;
						previousValue.Ruta.Remove(this);
					}
					this._Empresa1.Entity = value;
					if ((value != null))
					{
						value.Ruta.Add(this);
						this._Empresa = value.Codigo;
					}
					else
					{
						this._Empresa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresa1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unidad_Ruta", Storage="_Unidad", ThisKey="Vehiculo", OtherKey="Codigo", IsForeignKey=true)]
		public Unidad Unidad
		{
			get
			{
				return this._Unidad.Entity;
			}
			set
			{
				Unidad previousValue = this._Unidad.Entity;
				if (((previousValue != value) 
							|| (this._Unidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unidad.Entity = null;
						previousValue.Ruta.Remove(this);
					}
					this._Unidad.Entity = value;
					if ((value != null))
					{
						value.Ruta.Add(this);
						this._Vehiculo = value.Codigo;
					}
					else
					{
						this._Vehiculo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Unidad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClienteRuta(ClienteRuta entity)
		{
			this.SendPropertyChanging();
			entity.Ruta1 = this;
		}
		
		private void detach_ClienteRuta(ClienteRuta entity)
		{
			this.SendPropertyChanging();
			entity.Ruta1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seguro")]
	public partial class Seguro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private System.Nullable<int> _Empresa;
		
		private string _Nombre;
		
		private string _Tipo;
		
		private string _Detalle;
		
		private EntityRef<Empresa> _Empresa1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnEmpresaChanging(System.Nullable<int> value);
    partial void OnEmpresaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Seguro()
		{
			this._Empresa1 = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresa", DbType="Int")]
		public System.Nullable<int> Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				if ((this._Empresa != value))
				{
					if (this._Empresa1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpresaChanging(value);
					this.SendPropertyChanging();
					this._Empresa = value;
					this.SendPropertyChanged("Empresa");
					this.OnEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(100)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Seguro", Storage="_Empresa1", ThisKey="Empresa", OtherKey="Codigo", IsForeignKey=true)]
		public Empresa Empresa1
		{
			get
			{
				return this._Empresa1.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa1.Entity;
				if (((previousValue != value) 
							|| (this._Empresa1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa1.Entity = null;
						previousValue.Seguro.Remove(this);
					}
					this._Empresa1.Entity = value;
					if ((value != null))
					{
						value.Seguro.Add(this);
						this._Empresa = value.Codigo;
					}
					else
					{
						this._Empresa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresa1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unidad")]
	public partial class Unidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codigo;
		
		private System.Nullable<int> _Empresa;
		
		private string _Placa;
		
		private string _Anno;
		
		private System.Nullable<int> _UltimoAnnoRevision;
		
		private string _Marca;
		
		private string _Modelo;
		
		private double _Latitud;
		
		private double _Longitud;
		
		private int _Capacidad;
		
		private string _URLFotografiaUnidad;
		
		private string _URLTarjetaCirculacion;
		
		private string _URLRevisionTecnica;
		
		private EntitySet<Ruta> _Ruta;
		
		private EntityRef<Empresa> _Empresa1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodigoChanging(int value);
    partial void OnCodigoChanged();
    partial void OnEmpresaChanging(System.Nullable<int> value);
    partial void OnEmpresaChanged();
    partial void OnPlacaChanging(string value);
    partial void OnPlacaChanged();
    partial void OnAnnoChanging(string value);
    partial void OnAnnoChanged();
    partial void OnUltimoAnnoRevisionChanging(System.Nullable<int> value);
    partial void OnUltimoAnnoRevisionChanged();
    partial void OnMarcaChanging(string value);
    partial void OnMarcaChanged();
    partial void OnModeloChanging(string value);
    partial void OnModeloChanged();
    partial void OnLatitudChanging(double value);
    partial void OnLatitudChanged();
    partial void OnLongitudChanging(double value);
    partial void OnLongitudChanged();
    partial void OnCapacidadChanging(int value);
    partial void OnCapacidadChanged();
    partial void OnURLFotografiaUnidadChanging(string value);
    partial void OnURLFotografiaUnidadChanged();
    partial void OnURLTarjetaCirculacionChanging(string value);
    partial void OnURLTarjetaCirculacionChanged();
    partial void OnURLRevisionTecnicaChanging(string value);
    partial void OnURLRevisionTecnicaChanged();
    #endregion
		
		public Unidad()
		{
			this._Ruta = new EntitySet<Ruta>(new Action<Ruta>(this.attach_Ruta), new Action<Ruta>(this.detach_Ruta));
			this._Empresa1 = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresa", DbType="Int")]
		public System.Nullable<int> Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				if ((this._Empresa != value))
				{
					if (this._Empresa1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpresaChanging(value);
					this.SendPropertyChanging();
					this._Empresa = value;
					this.SendPropertyChanged("Empresa");
					this.OnEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Placa", DbType="NVarChar(100)")]
		public string Placa
		{
			get
			{
				return this._Placa;
			}
			set
			{
				if ((this._Placa != value))
				{
					this.OnPlacaChanging(value);
					this.SendPropertyChanging();
					this._Placa = value;
					this.SendPropertyChanged("Placa");
					this.OnPlacaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anno", DbType="NVarChar(100)")]
		public string Anno
		{
			get
			{
				return this._Anno;
			}
			set
			{
				if ((this._Anno != value))
				{
					this.OnAnnoChanging(value);
					this.SendPropertyChanging();
					this._Anno = value;
					this.SendPropertyChanged("Anno");
					this.OnAnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimoAnnoRevision", DbType="Int")]
		public System.Nullable<int> UltimoAnnoRevision
		{
			get
			{
				return this._UltimoAnnoRevision;
			}
			set
			{
				if ((this._UltimoAnnoRevision != value))
				{
					this.OnUltimoAnnoRevisionChanging(value);
					this.SendPropertyChanging();
					this._UltimoAnnoRevision = value;
					this.SendPropertyChanged("UltimoAnnoRevision");
					this.OnUltimoAnnoRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="NVarChar(100)")]
		public string Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="NVarChar(100)")]
		public string Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					this.OnModeloChanging(value);
					this.SendPropertyChanging();
					this._Modelo = value;
					this.SendPropertyChanged("Modelo");
					this.OnModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitud", DbType="Float NOT NULL")]
		public double Latitud
		{
			get
			{
				return this._Latitud;
			}
			set
			{
				if ((this._Latitud != value))
				{
					this.OnLatitudChanging(value);
					this.SendPropertyChanging();
					this._Latitud = value;
					this.SendPropertyChanged("Latitud");
					this.OnLatitudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitud", DbType="Float NOT NULL")]
		public double Longitud
		{
			get
			{
				return this._Longitud;
			}
			set
			{
				if ((this._Longitud != value))
				{
					this.OnLongitudChanging(value);
					this.SendPropertyChanging();
					this._Longitud = value;
					this.SendPropertyChanged("Longitud");
					this.OnLongitudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacidad", DbType="Int NOT NULL")]
		public int Capacidad
		{
			get
			{
				return this._Capacidad;
			}
			set
			{
				if ((this._Capacidad != value))
				{
					this.OnCapacidadChanging(value);
					this.SendPropertyChanging();
					this._Capacidad = value;
					this.SendPropertyChanged("Capacidad");
					this.OnCapacidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLFotografiaUnidad", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URLFotografiaUnidad
		{
			get
			{
				return this._URLFotografiaUnidad;
			}
			set
			{
				if ((this._URLFotografiaUnidad != value))
				{
					this.OnURLFotografiaUnidadChanging(value);
					this.SendPropertyChanging();
					this._URLFotografiaUnidad = value;
					this.SendPropertyChanged("URLFotografiaUnidad");
					this.OnURLFotografiaUnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLTarjetaCirculacion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URLTarjetaCirculacion
		{
			get
			{
				return this._URLTarjetaCirculacion;
			}
			set
			{
				if ((this._URLTarjetaCirculacion != value))
				{
					this.OnURLTarjetaCirculacionChanging(value);
					this.SendPropertyChanging();
					this._URLTarjetaCirculacion = value;
					this.SendPropertyChanged("URLTarjetaCirculacion");
					this.OnURLTarjetaCirculacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLRevisionTecnica", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URLRevisionTecnica
		{
			get
			{
				return this._URLRevisionTecnica;
			}
			set
			{
				if ((this._URLRevisionTecnica != value))
				{
					this.OnURLRevisionTecnicaChanging(value);
					this.SendPropertyChanging();
					this._URLRevisionTecnica = value;
					this.SendPropertyChanged("URLRevisionTecnica");
					this.OnURLRevisionTecnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unidad_Ruta", Storage="_Ruta", ThisKey="Codigo", OtherKey="Vehiculo")]
		public EntitySet<Ruta> Ruta
		{
			get
			{
				return this._Ruta;
			}
			set
			{
				this._Ruta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Unidad", Storage="_Empresa1", ThisKey="Empresa", OtherKey="Codigo", IsForeignKey=true)]
		public Empresa Empresa1
		{
			get
			{
				return this._Empresa1.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa1.Entity;
				if (((previousValue != value) 
							|| (this._Empresa1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa1.Entity = null;
						previousValue.Unidad.Remove(this);
					}
					this._Empresa1.Entity = value;
					if ((value != null))
					{
						value.Unidad.Add(this);
						this._Empresa = value.Codigo;
					}
					else
					{
						this._Empresa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresa1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ruta(Ruta entity)
		{
			this.SendPropertyChanging();
			entity.Unidad = this;
		}
		
		private void detach_Ruta(Ruta entity)
		{
			this.SendPropertyChanging();
			entity.Unidad = null;
		}
	}
}
#pragma warning restore 1591
